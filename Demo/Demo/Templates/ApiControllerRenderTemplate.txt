// <auto-generated/>
using Grpc.Core;
{{ for value in refences }}
using {{ value }};
{{ end }}

namespace {{ namespace }};

{{ modifiers }} class {{ identifier }}
{ {{ for service in services }}
    private readonly {{ service }} _service{{service}};
{{ end }}
    public {{identifier}}({{for service in services}} {{service}} service{{service}}{{ end }})
    { {{ for service in services }}
        _service{{service}} = service{{service}} {{ end }};
    } 
{{ for method in methods }}
    {{ method.modifiers }} {{ method.async ? 'async' :'' }} {{ method.response }} {{ method.identifier }}(MethodRequest request, ServerCallContext context)
    {
        var result = await _service{{method.implementation}}.{{method.name}}(
            {{~ for arg in method.arguments ~}}
            {{arg.target}}: request.{{arg.source}},
            {{~ end ~}}
            token: context.CancellationToken);
        
        return new()
        {
            Result = result
        };

    } {{ end }}
}